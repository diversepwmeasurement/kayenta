env:
  CONTAINER_REGISTRY: us-docker.pkg.dev/spinnaker-community/docker
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx2g -Xms2g
jobs:
  release:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: zulu
        java-version: '17

          11

          '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: release_info
      name: Assemble release info
      run: '. .github/workflows/release_info.sh ${{ github.event.repository.full_name
        }}

        echo CHANGELOG=$(echo -e "${CHANGELOG}") >> $GITHUB_OUTPUT

        echo SKIP_RELEASE="${SKIP_RELEASE}" >> $GITHUB_OUTPUT

        echo IS_CANDIDATE="${IS_CANDIDATE}" >> $GITHUB_OUTPUT

        echo RELEASE_VERSION="${RELEASE_VERSION}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: build_variables
      name: Prepare build variables
      run: 'echo REPO="${GITHUB_REPOSITORY##*/}" >> $GITHUB_OUTPUT

        echo VERSION="$(git rev-parse --short HEAD)-$(date --utc +''%Y%m%d%H%M'')"
        >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      env:
        ORG_GRADLE_PROJECT_nexusPassword: ${{ secrets.NEXUS_PASSWORD }}
        ORG_GRADLE_PROJECT_nexusPgpSigningKey: ${{ secrets.NEXUS_PGP_SIGNING_KEY }}
        ORG_GRADLE_PROJECT_nexusPgpSigningPassword: ${{ secrets.NEXUS_PGP_SIGNING_PASSWORD
          }}
        ORG_GRADLE_PROJECT_nexusPublishEnabled: true
        ORG_GRADLE_PROJECT_nexusUsername: ${{ secrets.NEXUS_USERNAME }}
        ORG_GRADLE_PROJECT_version: ${{ steps.release_info.outputs.RELEASE_VERSION
          }}
      name: Release build
      run: './gradlew --info build ${{ steps.build_variables.outputs.REPO }}-web:installDist
        publishToNexus closeAndReleaseNexusStagingRepository

        '
    - continue-on-error: true
      env:
        GAR_JSON_KEY: ${{ secrets.GAR_JSON_KEY }}
        ORG_GRADLE_PROJECT_artifactRegistryPublishEnabled: true
        ORG_GRADLE_PROJECT_version: ${{ steps.release_info.outputs.RELEASE_VERSION
          }}
      name: Publish apt packages to Google Artifact Registry
      run: './gradlew --info publish

        '
    - continue-on-error: true
      if: startsWith(github.repository, 'spinnaker/')
      name: Login to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GAR_JSON_KEY }}
    - continue-on-error: true
      if: startsWith(github.repository, 'spinnaker/')
      name: Upload halconfig profiles to GCS
      uses: google-github-actions/upload-cloud-storage@v2
      with:
        destination: halconfig/${{ steps.build_variables.outputs.REPO }}/${{ steps.release_info.outputs.RELEASE_VERSION
          }}
        parent: false
        path: halconfig/
    - continue-on-error: true
      if: startsWith(github.repository, 'spinnaker/')
      name: Login to GAR
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.GAR_JSON_KEY }}
        registry: us-docker.pkg.dev
        username: _json_key
    - continue-on-error: true
      if: startsWith(github.repository, 'spinnaker/')
      name: Build and publish slim container image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.slim
        platforms: linux/amd64,linux/arm64
        push: false
        tags: '"${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO
          }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-unvalidated"

          "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{
          steps.release_info.outputs.RELEASE_VERSION }}-unvalidated-slim"

          "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{
          steps.release_info.outputs.RELEASE_VERSION }}-${{ steps.build_variables.outputs.VERSION
          }}-unvalidated-slim"

          '
    - continue-on-error: true
      if: startsWith(github.repository, 'spinnaker/')
      name: Build and publish ubuntu container image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.ubuntu
        platforms: linux/amd64,linux/arm64
        push: false
        tags: '"${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO
          }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-unvalidated-ubuntu"

          "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{
          steps.release_info.outputs.RELEASE_VERSION }}-${{ steps.build_variables.outputs.VERSION
          }}-unvalidated-ubuntu"

          '
    - continue-on-error: true
      if: startsWith(github.repository, 'spinnaker/')
      name: Build and publish slim JRE 11 container image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.java11.slim
        platforms: linux/amd64,linux/arm64
        push: false
        tags: '"${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO
          }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-java11-unvalidated"

          "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{
          steps.release_info.outputs.RELEASE_VERSION }}-java11-unvalidated-slim"

          "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{
          steps.release_info.outputs.RELEASE_VERSION }}-${{ steps.build_variables.outputs.VERSION
          }}-java11-unvalidated-slim"

          '
    - continue-on-error: true
      if: startsWith(github.repository, 'spinnaker/')
      name: Build and publish ubuntu JRE 11 container image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.java11.ubuntu
        platforms: linux/amd64,linux/arm64
        push: false
        tags: '"${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO
          }}:${{ steps.release_info.outputs.RELEASE_VERSION }}-java11-unvalidated-ubuntu"

          "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{
          steps.release_info.outputs.RELEASE_VERSION }}-${{ steps.build_variables.outputs.VERSION
          }}-java11-unvalidated-ubuntu"

          '
    - continue-on-error: true
      if: steps.release_info.outputs.SKIP_RELEASE == 'false'
      name: Create release
      uses: softprops/action-gh-release@v2
      with:
        body: '${{ steps.release_info.outputs.CHANGELOG }}

          '
        draft: false
        name: ${{ github.event.repository.name }} ${{ github.ref_name }}
        prerelease: ${{ steps.release_info.outputs.IS_CANDIDATE }}
        tag_name: ${{ github.ref }}
        token: ${{ secrets.GITHUB_TOKEN }}
name: Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
